*** cmdlocal.c	Fri Jan 19 17:49:58 2018
--- cmdlocal.c	Fri Jan 19 18:00:08 2018
***************
*** 20,25 ****
--- 20,27 ----
  #include "htab.h"
  #include "parse.h"
  
+ #include "hspace.h"
+ 
  extern HASHTAB htab_reserved_aliases;
  
  /* Called during the command init sequence before any commands are
***************
*** 80,83 ****
--- 82,95 ----
    command_add("@SILLY", CMD_T_ANY, "WIZARD ROYALTY", "SEE_ALL",
                "NOISY NOEVAL VERY", cmd_local_silly);
  #endif
+ #ifdef HSPACE
+   command_add("@SPACE", CMD_T_ANY | CMD_T_EQSPLIT, "WIZARD ROYALTY HS_SHIP HS_CONSOLE", NULL, "DUMP HALT LIST LOAD MOVE RECONFIGURE SPAWN START VERSION", cmd_space);
+   command_add("@CONSOLE", CMD_T_THING | CMD_T_EQSPLIT, NULL, NULL, "ABORT BURN CLOSEBAY COMBATSTAT COOLDOWN DOCK DUMP ESTATUS ETA EXTEND FIRE GATE HACK HEADING LAND LAUNCH LINK LOCK MANIFEST NAVMODE OPENBAY PRIMARY PROMPT PVPOFF PVPON QUICKSTAT RETRACT SCAN SECONDARY SHUNT SPEED SREP STANCE STATUS SYSSTAT TAXI TRACTOR UNLINK VIEW WAYPOINT", cmd_console);
+   command_add("BOARD", CMD_T_ANY | CMD_T_EQSPLIT, NULL, NULL, "", cmd_board);
+   command_add("COM", CMD_T_ANY | CMD_T_EQSPLIT, NULL, NULL, "", cmd_com);
+   command_add("DISEMBARK", CMD_T_ANY, NULL, NULL, "", cmd_disembark);
+   command_add("EJECT", CMD_T_ANY, NULL, NULL, "", cmd_eject);
+   command_add("MAN", CMD_T_ANY, NULL, NULL, "", cmd_man);
+   command_add("UNMAN", CMD_T_ANY, NULL, NULL, "", cmd_unman);
+ #endif
  }
*** funlocal.c	Fri Jan 19 17:49:58 2018
--- funlocal.c	Fri Jan 19 17:59:10 2018
***************
*** 22,27 ****
--- 22,29 ----
  #include "function.h"
  #include "parse.h"
  
+ #include "hspace.h"
+ 
  void local_functions(void);
  
  /* Here you can use the new add_function instead of hacking into function.c
***************
*** 39,42 ****
--- 41,54 ----
  #ifdef EXAMPLE
    function_add("SILLY", local_fun_silly, 1, 1, FN_REG);
  #endif
+ #if HSPACE
+   function_add("HS_CYCLE", fun_hs_cycle, 0, 0, FN_REG);
+   function_add("HS_SET", fun_hs_set, 2, 3, FN_WIZARD);
+   function_add("HS_GET", fun_hs_get, 2, 2, FN_REG);
+   function_add("HS_SREP", fun_hs_srep, 1, 1, FN_REG);
+   function_add("HS_COM", fun_hs_com, 1, 2, FN_REG);
+   function_add("HS_COOLDOWN", fun_hs_cooldown, 2, 2, FN_REG);
+   function_add("HS_LOAD", fun_hs_load, 1, 1, FN_WIZARD);
+   function_add("HS_SALVAGE", fun_hs_salvage, 2, 2, FN_WIZARD);
+ #endif
  }
*** local.c	Fri Jan 19 17:49:58 2018
--- local.c	Fri Jan 19 18:02:18 2018
***************
*** 20,25 ****
--- 20,27 ----
  #include "lock.h"
  #include "parse.h"
  
+ #include "hspace.h"
+ 
  extern HASHTAB htab_reserved_aliases;
  
  /* Called after all MUSH init is done.
***************
*** 38,44 ****
  * time. The latter two can be null pointers. The callback function returns true
  * if the softcode event should be triggered, false if it shouldn't.
  */
! #if 0 /* Change to 1 if you need local_timer functionality. */
    sq_register_loop(1, local_timer, NULL, NULL);
  #endif
  }
--- 40,47 ----
  * time. The latter two can be null pointers. The callback function returns true
  * if the softcode event should be triggered, false if it shouldn't.
  */
!   hs_init();
! #if 1 /* Change to 1 if you need local_timer functionality. */
    sq_register_loop(1, local_timer, NULL, NULL);
  #endif
  }
***************
*** 94,99 ****
--- 97,103 ----
  void
  local_dump_database(void)
  {
+   hs_dump();
  }
  
  /* Called when the MUSH is shutting down.
***************
*** 103,108 ****
--- 107,113 ----
  void
  local_shutdown(void)
  {
+   hs_shutdown();
  }
  
  /* Called when the MUSH is performing a dbck database check,
***************
*** 112,117 ****
--- 117,123 ----
  void
  local_dbck(void)
  {
+   hs_dump();
  }
  
  /* This is called exactly once a second after the MUSH has done all
***************
*** 121,127 ****
  bool
  local_timer(void *data __attribute__((__unused__)))
  {
! 
    /* The callback has to be set back up or it'll only run once. */
    return false;
  }
--- 127,133 ----
  bool
  local_timer(void *data __attribute__((__unused__)))
  {
!   hs_cycle();
    /* The callback has to be set back up or it'll only run once. */
    return false;
  }
*** Makefile	Fri Jan 19 18:08:38 2018
--- Makefile	Fri Jan 19 18:09:27 2018
***************
*** 7,14 ****
  OUTFILES=buildinf netmud info_slave ssl_slave
  
  # Libs EXCEPT for SQL ones
! LIBS=$(CLIBS)
! CFLAGS=$(CCFLAGS) $(SQL_CFLAGS)
  
  # On Windows, due to the bizarre way it handles cases in filesystems,
  # make thinks the file extension is .C and not .c and tries to compile files
--- 7,14 ----
  OUTFILES=buildinf netmud info_slave ssl_slave
  
  # Libs EXCEPT for SQL ones
! LIBS=$(CLIBS) space/libhspace.a
! CFLAGS=$(CCFLAGS) $(SQL_CFLAGS) -DHSPACE -Ispace
  
  # On Windows, due to the bizarre way it handles cases in filesystems,
  # make thinks the file extension is .C and not .c and tries to compile files
